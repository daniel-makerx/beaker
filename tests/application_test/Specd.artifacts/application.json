{
    "hints": {
        "get_asset_id()uint64": {
            "read_only": true,
            "call_config": {
                "no_op": "CALL"
            }
        },
        "annotated_meth(asset)void": {
            "default_arguments": {
                "aid": {
                    "source": "abi-method",
                    "data": {
                        "name": "get_asset_id",
                        "args": [],
                        "returns": {
                            "type": "uint64"
                        }
                    }
                }
            },
            "call_config": {
                "no_op": "CALL"
            }
        },
        "struct_meth((uint64,uint32))void": {
            "structs": {
                "thing": {
                    "name": "Thing",
                    "elements": [
                        [
                            "a",
                            "uint64"
                        ],
                        [
                            "b",
                            "uint32"
                        ]
                    ]
                }
            },
            "call_config": {
                "no_op": "CALL"
            }
        },
        "default_global_state(uint64)void": {
            "default_arguments": {
                "value": {
                    "source": "global-state",
                    "data": "decl_global_val"
                }
            },
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDgKaW50Y2Jsb2NrIDAgMQp0eG4gTnVtQXBwQXJncwppbnRjXzAgLy8gMAo9PQpibnogbWFpbl9sMTAKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMApwdXNoYnl0ZXMgMHg1YmEyMmE4NCAvLyAiZ2V0X2Fzc2V0X2lkKCl1aW50NjQiCj09CmJueiBtYWluX2w5CnR4bmEgQXBwbGljYXRpb25BcmdzIDAKcHVzaGJ5dGVzIDB4NzM5NzUyZmYgLy8gImFubm90YXRlZF9tZXRoKGFzc2V0KXZvaWQiCj09CmJueiBtYWluX2w4CnR4bmEgQXBwbGljYXRpb25BcmdzIDAKcHVzaGJ5dGVzIDB4ZWY1Y2RmOGMgLy8gInN0cnVjdF9tZXRoKCh1aW50NjQsdWludDMyKSl2b2lkIgo9PQpibnogbWFpbl9sNwp0eG5hIEFwcGxpY2F0aW9uQXJncyAwCnB1c2hieXRlcyAweDM0ODNjZGQ4IC8vICJkZWZhdWx0X2dsb2JhbF9zdGF0ZSh1aW50NjQpdm9pZCIKPT0KYm56IG1haW5fbDYKZXJyCm1haW5fbDY6CnR4biBPbkNvbXBsZXRpb24KaW50Y18wIC8vIE5vT3AKPT0KdHhuIEFwcGxpY2F0aW9uSUQKaW50Y18wIC8vIDAKIT0KJiYKYXNzZXJ0CmNhbGxzdWIgZGVmYXVsdGdsb2JhbHN0YXRlY2FzdGVyXzcKaW50Y18xIC8vIDEKcmV0dXJuCm1haW5fbDc6CnR4biBPbkNvbXBsZXRpb24KaW50Y18wIC8vIE5vT3AKPT0KdHhuIEFwcGxpY2F0aW9uSUQKaW50Y18wIC8vIDAKIT0KJiYKYXNzZXJ0CmNhbGxzdWIgc3RydWN0bWV0aGNhc3Rlcl82CmludGNfMSAvLyAxCnJldHVybgptYWluX2w4Ogp0eG4gT25Db21wbGV0aW9uCmludGNfMCAvLyBOb09wCj09CnR4biBBcHBsaWNhdGlvbklECmludGNfMCAvLyAwCiE9CiYmCmFzc2VydApjYWxsc3ViIGFubm90YXRlZG1ldGhjYXN0ZXJfNQppbnRjXzEgLy8gMQpyZXR1cm4KbWFpbl9sOToKdHhuIE9uQ29tcGxldGlvbgppbnRjXzAgLy8gTm9PcAo9PQp0eG4gQXBwbGljYXRpb25JRAppbnRjXzAgLy8gMAohPQomJgphc3NlcnQKY2FsbHN1YiBnZXRhc3NldGlkY2FzdGVyXzQKaW50Y18xIC8vIDEKcmV0dXJuCm1haW5fbDEwOgp0eG4gT25Db21wbGV0aW9uCmludGNfMCAvLyBOb09wCj09CmJueiBtYWluX2wxMgplcnIKbWFpbl9sMTI6CnR4biBBcHBsaWNhdGlvbklECmludGNfMCAvLyAwCj09CmFzc2VydAppbnRjXzEgLy8gMQpyZXR1cm4KCi8vIGdldF9hc3NldF9pZApnZXRhc3NldGlkXzA6CnByb3RvIDAgMQppbnRjXzAgLy8gMApwdXNoaW50IDEyMyAvLyAxMjMKZnJhbWVfYnVyeSAwCnJldHN1YgoKLy8gYW5ub3RhdGVkX21ldGgKYW5ub3RhdGVkbWV0aF8xOgpwcm90byAxIDAKaW50Y18xIC8vIDEKYXNzZXJ0CnJldHN1YgoKLy8gc3RydWN0X21ldGgKc3RydWN0bWV0aF8yOgpwcm90byAxIDAKaW50Y18xIC8vIDEKcmV0dXJuCgovLyBkZWZhdWx0X2dsb2JhbF9zdGF0ZQpkZWZhdWx0Z2xvYmFsc3RhdGVfMzoKcHJvdG8gMSAwCmludGNfMSAvLyAxCnJldHVybgoKLy8gZ2V0X2Fzc2V0X2lkX2Nhc3RlcgpnZXRhc3NldGlkY2FzdGVyXzQ6CnByb3RvIDAgMAppbnRjXzAgLy8gMApjYWxsc3ViIGdldGFzc2V0aWRfMApmcmFtZV9idXJ5IDAKcHVzaGJ5dGVzIDB4MTUxZjdjNzUgLy8gMHgxNTFmN2M3NQpmcmFtZV9kaWcgMAppdG9iCmNvbmNhdApsb2cKcmV0c3ViCgovLyBhbm5vdGF0ZWRfbWV0aF9jYXN0ZXIKYW5ub3RhdGVkbWV0aGNhc3Rlcl81Ogpwcm90byAwIDAKaW50Y18wIC8vIDAKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQppbnRjXzAgLy8gMApnZXRieXRlCmZyYW1lX2J1cnkgMApmcmFtZV9kaWcgMApjYWxsc3ViIGFubm90YXRlZG1ldGhfMQpyZXRzdWIKCi8vIHN0cnVjdF9tZXRoX2Nhc3RlcgpzdHJ1Y3RtZXRoY2FzdGVyXzY6CnByb3RvIDAgMApwdXNoYnl0ZXMgMHggLy8gIiIKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQpmcmFtZV9idXJ5IDAKZnJhbWVfZGlnIDAKY2FsbHN1YiBzdHJ1Y3RtZXRoXzIKcmV0c3ViCgovLyBkZWZhdWx0X2dsb2JhbF9zdGF0ZV9jYXN0ZXIKZGVmYXVsdGdsb2JhbHN0YXRlY2FzdGVyXzc6CnByb3RvIDAgMAppbnRjXzAgLy8gMAp0eG5hIEFwcGxpY2F0aW9uQXJncyAxCmJ0b2kKZnJhbWVfYnVyeSAwCmZyYW1lX2RpZyAwCmNhbGxzdWIgZGVmYXVsdGdsb2JhbHN0YXRlXzMKcmV0c3Vi",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDgKcHVzaGludCAwIC8vIDAKcmV0dXJu"
    },
    "state": {
        "global": {
            "num_byte_slices": 0,
            "num_uints": 1
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 1
        }
    },
    "schema": {
        "global": {
            "declared": {
                "decl_global_val": {
                    "type": "uint64",
                    "key": "decl_global_val",
                    "descr": ""
                }
            },
            "reserved": {}
        },
        "local": {
            "declared": {
                "decl_local_val": {
                    "type": "uint64",
                    "key": "decl_local_val",
                    "descr": ""
                }
            },
            "reserved": {}
        }
    },
    "contract": {
        "name": "Specd",
        "methods": [
            {
                "name": "get_asset_id",
                "args": [],
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "annotated_meth",
                "args": [
                    {
                        "type": "asset",
                        "name": "aid"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "struct_meth",
                "args": [
                    {
                        "type": "(uint64,uint32)",
                        "name": "thing"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "default_global_state",
                "args": [
                    {
                        "type": "uint64",
                        "name": "value"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            }
        ],
        "networks": {}
    },
    "bare_call_config": {
        "no_op": "CREATE"
    }
}