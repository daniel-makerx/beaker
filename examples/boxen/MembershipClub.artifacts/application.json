{
    "hints": {
        "bootstrap(pay,string)uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "remove_member(address)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "add_member(account,asset)void": {
            "default_arguments": {
                "membership_token": {
                    "source": "global-state",
                    "data": "membership_token"
                }
            },
            "call_config": {
                "no_op": "CALL"
            }
        },
        "update_role(account,uint8)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "get_membership_record(address)(uint8,bool)": {
            "structs": {
                "output": {
                    "name": "MembershipRecord",
                    "elements": [
                        [
                            "role",
                            "uint8"
                        ],
                        [
                            "voted",
                            "bool"
                        ]
                    ]
                }
            },
            "call_config": {
                "no_op": "CALL"
            }
        },
        "set_affirmation(uint16,byte[64],asset)void": {
            "default_arguments": {
                "membership_token": {
                    "source": "global-state",
                    "data": "membership_token"
                }
            },
            "call_config": {
                "no_op": "CALL"
            }
        },
        "get_affirmation(asset)byte[64]": {
            "default_arguments": {
                "membership_token": {
                    "source": "global-state",
                    "data": "membership_token"
                }
            },
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDgKcHVzaGludCAwIC8vIDAKcmV0dXJu"
    },
    "state": {
        "global": {
            "num_byte_slices": 0,
            "num_uints": 1
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {
                "membership_token": {
                    "type": "uint64",
                    "key": "membership_token",
                    "descr": "The asset that represents membership of this club"
                }
            },
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "MembershipClub",
        "methods": [
            {
                "name": "bootstrap",
                "args": [
                    {
                        "type": "pay",
                        "name": "seed"
                    },
                    {
                        "type": "string",
                        "name": "token_name"
                    }
                ],
                "returns": {
                    "type": "uint64"
                },
                "desc": "create membership token and receive initial seed payment"
            },
            {
                "name": "remove_member",
                "args": [
                    {
                        "type": "address",
                        "name": "member"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "add_member",
                "args": [
                    {
                        "type": "account",
                        "name": "new_member"
                    },
                    {
                        "type": "asset",
                        "name": "membership_token"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "update_role",
                "args": [
                    {
                        "type": "account",
                        "name": "member"
                    },
                    {
                        "type": "uint8",
                        "name": "new_role"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "get_membership_record",
                "args": [
                    {
                        "type": "address",
                        "name": "member"
                    }
                ],
                "returns": {
                    "type": "(uint8,bool)"
                }
            },
            {
                "name": "set_affirmation",
                "args": [
                    {
                        "type": "uint16",
                        "name": "idx"
                    },
                    {
                        "type": "byte[64]",
                        "name": "affirmation"
                    },
                    {
                        "type": "asset",
                        "name": "membership_token"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "get_affirmation",
                "args": [
                    {
                        "type": "asset",
                        "name": "membership_token"
                    }
                ],
                "returns": {
                    "type": "byte[64]"
                }
            }
        ],
        "networks": {}
    },
    "bare_call_config": {
        "no_op": "CREATE"
    }
}