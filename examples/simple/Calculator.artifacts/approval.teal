#pragma version 8
intcblock 0 1
bytecblock 0x151f7c75
txn NumAppArgs
intc_0 // 0
==
bnz main_l10
txna ApplicationArgs 0
pushbytes 0xfe6bdf69 // "add(uint64,uint64)uint64"
==
bnz main_l9
txna ApplicationArgs 0
pushbytes 0xe2f188c5 // "mul(uint64,uint64)uint64"
==
bnz main_l8
txna ApplicationArgs 0
pushbytes 0x78b488b7 // "sub(uint64,uint64)uint64"
==
bnz main_l7
txna ApplicationArgs 0
pushbytes 0x16e80f08 // "div(uint64,uint64)uint64"
==
bnz main_l6
err
main_l6:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub divcaster_3
intc_1 // 1
return
main_l7:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub subcaster_2
intc_1 // 1
return
main_l8:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub mulcaster_1
intc_1 // 1
return
main_l9:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub addcaster_0
intc_1 // 1
return
main_l10:
txn OnCompletion
intc_0 // NoOp
==
bnz main_l12
err
main_l12:
txn ApplicationID
intc_0 // 0
==
assert
intc_1 // 1
return

// add_caster
addcaster_0:
proto 0 0
intc_0 // 0
dupn 2
txna ApplicationArgs 1
btoi
frame_bury 1
txna ApplicationArgs 2
btoi
frame_bury 2
frame_dig 1
frame_dig 2
callsub add_4
frame_bury 0
bytec_0 // 0x151f7c75
frame_dig 0
itob
concat
log
retsub

// mul_caster
mulcaster_1:
proto 0 0
intc_0 // 0
dupn 2
txna ApplicationArgs 1
btoi
frame_bury 1
txna ApplicationArgs 2
btoi
frame_bury 2
frame_dig 1
frame_dig 2
callsub mul_5
frame_bury 0
bytec_0 // 0x151f7c75
frame_dig 0
itob
concat
log
retsub

// sub_caster
subcaster_2:
proto 0 0
intc_0 // 0
dupn 2
txna ApplicationArgs 1
btoi
frame_bury 1
txna ApplicationArgs 2
btoi
frame_bury 2
frame_dig 1
frame_dig 2
callsub sub_6
frame_bury 0
bytec_0 // 0x151f7c75
frame_dig 0
itob
concat
log
retsub

// div_caster
divcaster_3:
proto 0 0
intc_0 // 0
dupn 2
txna ApplicationArgs 1
btoi
frame_bury 1
txna ApplicationArgs 2
btoi
frame_bury 2
frame_dig 1
frame_dig 2
callsub div_7
frame_bury 0
bytec_0 // 0x151f7c75
frame_dig 0
itob
concat
log
retsub

// add
add_4:
proto 2 1
intc_0 // 0
frame_dig -2
frame_dig -1
+
frame_bury 0
retsub

// mul
mul_5:
proto 2 1
intc_0 // 0
frame_dig -2
frame_dig -1
*
frame_bury 0
retsub

// sub
sub_6:
proto 2 1
intc_0 // 0
frame_dig -2
frame_dig -1
-
frame_bury 0
retsub

// div
div_7:
proto 2 1
intc_0 // 0
frame_dig -2
frame_dig -1
/
frame_bury 0
retsub