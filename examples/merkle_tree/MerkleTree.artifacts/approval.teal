#pragma version 8
intcblock 0 1 3 33
bytecblock 0x 0x726f6f74 0x73697a65
txna ApplicationArgs 0
pushbytes 0x24378d3c // "delete()void"
==
bnz main_l10
txna ApplicationArgs 0
pushbytes 0x4c5c61ba // "create()void"
==
bnz main_l9
txna ApplicationArgs 0
pushbytes 0x5e41d014 // "verify_leaf(byte[],byte[33][3])void"
==
bnz main_l8
txna ApplicationArgs 0
pushbytes 0x46e804c2 // "append_leaf(byte[],byte[33][3])void"
==
bnz main_l7
txna ApplicationArgs 0
pushbytes 0xf422290e // "update_leaf(byte[],byte[],byte[33][3])void"
==
bnz main_l6
err
main_l6:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub updateleafcaster_4
intc_1 // 1
return
main_l7:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub appendleafcaster_3
intc_1 // 1
return
main_l8:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub verifyleafcaster_2
intc_1 // 1
return
main_l9:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
==
&&
assert
callsub createcaster_1
intc_1 // 1
return
main_l10:
txn OnCompletion
pushint 5 // DeleteApplication
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub deletecaster_0
intc_1 // 1
return

// delete_caster
deletecaster_0:
proto 0 0
callsub delete_9
retsub

// create_caster
createcaster_1:
proto 0 0
callsub create_10
retsub

// verify_leaf_caster
verifyleafcaster_2:
proto 0 0
bytec_0 // ""
dup
txna ApplicationArgs 1
frame_bury 0
txna ApplicationArgs 2
frame_bury 1
frame_dig 0
frame_dig 1
callsub verifyleaf_11
retsub

// append_leaf_caster
appendleafcaster_3:
proto 0 0
bytec_0 // ""
dup
txna ApplicationArgs 1
frame_bury 0
txna ApplicationArgs 2
frame_bury 1
frame_dig 0
frame_dig 1
callsub appendleaf_12
retsub

// update_leaf_caster
updateleafcaster_4:
proto 0 0
bytec_0 // ""
dupn 2
txna ApplicationArgs 1
frame_bury 0
txna ApplicationArgs 2
frame_bury 1
txna ApplicationArgs 3
frame_bury 2
frame_dig 0
frame_dig 1
frame_dig 2
callsub updateleaf_13
retsub

// hash_concat
hashconcat_5:
proto 2 1
frame_dig -2
frame_dig -1
concat
sha256
retsub

// is_right_sibling
isrightsibling_6:
proto 1 1
frame_dig -1
intc_0 // 0
getbyte
pushint 170 // 170
==
retsub

// calc_root
calcroot_7:
proto 2 1
bytec_0 // ""
frame_dig -2
store 2
intc_0 // 0
store 3
calcroot_7_l1:
load 3
intc_2 // 3
<
bz calcroot_7_l6
frame_dig -1
intc_3 // 33
load 3
*
intc_3 // 33
extract3
frame_bury 0
frame_dig 0
callsub isrightsibling_6
bnz calcroot_7_l5
frame_dig 0
extract 1 32
load 2
callsub hashconcat_5
calcroot_7_l4:
store 2
load 3
intc_1 // 1
+
store 3
b calcroot_7_l1
calcroot_7_l5:
load 2
frame_dig 0
extract 1 32
callsub hashconcat_5
b calcroot_7_l4
calcroot_7_l6:
load 2
frame_bury 0
retsub

// calc_init_root
calcinitroot_8:
proto 0 1
bytec_0 // ""
sha256
store 1
intc_0 // 0
store 0
calcinitroot_8_l1:
load 0
intc_2 // 3
<
bz calcinitroot_8_l3
load 1
load 1
concat
sha256
store 1
load 0
intc_1 // 1
+
store 0
b calcinitroot_8_l1
calcinitroot_8_l3:
load 1
retsub

// delete
delete_9:
proto 0 0
txn Sender
global CreatorAddress
==
// unauthorized
assert
intc_1 // 1
return

// create
create_10:
proto 0 0
bytec_1 // "root"
callsub calcinitroot_8
app_global_put
bytec_2 // "size"
intc_0 // 0
app_global_put
retsub

// verify_leaf
verifyleaf_11:
proto 2 0
bytec_1 // "root"
app_global_get
frame_dig -2
extract 2 0
sha256
frame_dig -1
callsub calcroot_7
==
assert
retsub

// append_leaf
appendleaf_12:
proto 2 0
frame_dig -2
bytec_0 // ""
!=
assert
bytec_1 // "root"
app_global_get
bytec_0 // ""
sha256
frame_dig -1
callsub calcroot_7
==
assert
bytec_1 // "root"
frame_dig -2
extract 2 0
sha256
frame_dig -1
callsub calcroot_7
app_global_put
bytec_2 // "size"
bytec_2 // "size"
app_global_get
intc_1 // 1
+
app_global_put
retsub

// update_leaf
updateleaf_13:
proto 3 0
frame_dig -2
extract 2 0
bytec_0 // ""
!=
assert
bytec_1 // "root"
app_global_get
frame_dig -3
extract 2 0
sha256
frame_dig -1
callsub calcroot_7
==
assert
bytec_1 // "root"
frame_dig -2
extract 2 0
sha256
frame_dig -1
callsub calcroot_7
app_global_put
retsub