{
    "hints": {
        "check_eth_sig(byte[32],byte[65])string": {
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDgKaW50Y2Jsb2NrIDAgMQpieXRlY2Jsb2NrIDB4CnR4biBOdW1BcHBBcmdzCmludGNfMCAvLyAwCj09CmJueiBtYWluX2w0CnR4bmEgQXBwbGljYXRpb25BcmdzIDAKcHVzaGJ5dGVzIDB4MzkzZDAzZjEgLy8gImNoZWNrX2V0aF9zaWcoYnl0ZVszMl0sYnl0ZVs2NV0pc3RyaW5nIgo9PQpibnogbWFpbl9sMwplcnIKbWFpbl9sMzoKdHhuIE9uQ29tcGxldGlvbgppbnRjXzAgLy8gTm9PcAo9PQp0eG4gQXBwbGljYXRpb25JRAppbnRjXzAgLy8gMAohPQomJgphc3NlcnQKY2FsbHN1YiBjaGVja2V0aHNpZ2Nhc3Rlcl8wCmludGNfMSAvLyAxCnJldHVybgptYWluX2w0Ogp0eG4gT25Db21wbGV0aW9uCmludGNfMCAvLyBOb09wCj09CmJueiBtYWluX2w2CmVycgptYWluX2w2Ogp0eG4gQXBwbGljYXRpb25JRAppbnRjXzAgLy8gMAo9PQphc3NlcnQKaW50Y18xIC8vIDEKcmV0dXJuCgovLyBjaGVja19ldGhfc2lnX2Nhc3RlcgpjaGVja2V0aHNpZ2Nhc3Rlcl8wOgpwcm90byAwIDAKYnl0ZWNfMCAvLyAiIgpkdXBuIDIKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQpmcmFtZV9idXJ5IDEKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMgpmcmFtZV9idXJ5IDIKZnJhbWVfZGlnIDEKZnJhbWVfZGlnIDIKY2FsbHN1YiBjaGVja2V0aHNpZ18xCmZyYW1lX2J1cnkgMApwdXNoYnl0ZXMgMHgxNTFmN2M3NSAvLyAweDE1MWY3Yzc1CmZyYW1lX2RpZyAwCmNvbmNhdApsb2cKcmV0c3ViCgovLyBjaGVja19ldGhfc2lnCmNoZWNrZXRoc2lnXzE6CnByb3RvIDIgMQpieXRlY18wIC8vICIiCnR4biBTZW5kZXIKcHVzaGJ5dGVzIDB4Y2Y2MzNiNTQ5MmExMzRjNzFkM2NmYmFlMDJiMmM1MjQzMzk3OTMxMmNhMDRiMTdiYmViOGM2ZTZkYWM1YzhjOSAvLyBaNVJUV1ZFU1VFMk1PSEo0N09YQUZNV0ZFUVpaUEVZU1pJQ0xDNjU2WERET05XV0ZaREVWVTRXWERFCj09CmFzc2VydApwdXNoYnl0ZXMgMHgwMDBlNmM3MzY5NjcyMDc2NjE2YzY5NjQ2MTc0NjU2NCAvLyAweDAwMGU2YzczNjk2NzIwNzY2MTZjNjk2NDYxNzQ2NTY0CmZyYW1lX2J1cnkgMApyZXRzdWI=",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDgKcHVzaGludCAwIC8vIDAKcmV0dXJu"
    },
    "state": {
        "global": {
            "num_byte_slices": 0,
            "num_uints": 0
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {},
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "EthChecker",
        "methods": [
            {
                "name": "check_eth_sig",
                "args": [
                    {
                        "type": "byte[32]",
                        "name": "hash"
                    },
                    {
                        "type": "byte[65]",
                        "name": "signature"
                    }
                ],
                "returns": {
                    "type": "string"
                }
            }
        ],
        "networks": {}
    },
    "bare_call_config": {
        "no_op": "CREATE"
    }
}